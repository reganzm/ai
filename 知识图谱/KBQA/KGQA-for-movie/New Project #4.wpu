#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'qRTBMgOnAFwJqqsC0rQ1RTNH8S'\
        'GRC9vN',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3,
                                   1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.27586206896551724,
                 'override_title': None,
                 'pagelist': [('debug-io',
                               'tall',
                               0,
                               {}),
                              ('python-shell',
                               'tall',
                               0,
                               {'active-range': (None,
        -1,
        -1),
                                'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'history': {None: ['import jieba\n',
        'help(jieba.suggest_freq)\n',
        'import pymysql\n',
        'help(pymysql.connect)\n',
        'class A(Object):\n      def __init__(self,name):\n             self'\
        '.name = name\n\n',
        'class A(object):\n      def __init__(slef,name):\n             self'\
        '.name = name\n\n',
        'class A(object):\n    def __init__(self,name):\n        self.name ='\
        ' name\n\n',
        "a = A('regan')\n",
        "b = A('TING')\n",
        'a | b\n']},
                                'launch-id': None,
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              ('debug-probe',
                               'tall',
                               0,
                               {'active-range': (None,
        -1,
        -1),
                                'attrib-starts': [],
                                'first-line': 20L,
                                'folded-linenos': [],
                                'history': {u'file:c:/Users/Administrator/Desktop/\u77e5\u8bc6\u56fe\u8c31/KG-demo-for-movie/kg_demo_movie/KB_query/jena_sparql_endpoint.py': ['r'\
        'esult\n',
        'fuseki.print_result_to_string(result)\n'],
        u'file:c:/Users/Administrator/Desktop/\u77e5\u8bc6\u56fe\u8c31/KG-demo-for-movie/kg_demo_movie/KB_query/query_main.py': ['q'\
        'uestion\n',
        "question.decode('utf8')\n",
        'word_objects\n',
        'word_objects[1]\n',
        'word_objects[2]\n',
        'word_objects[0]\n',
        'word_objects[0]()\n',
        'word_objects[0].\n',
        'word_objects[0].pos\n',
        'word_objects[0].token\n',
        'word_objects[1].token\n',
        'word_objects[1].pos\n',
        'help(rule.apply)\n',
        'len(queries_dict)\n',
        'queries_dict\n',
        'queries_dict.values\n',
        'queries_dict.values()\n',
        'queries_dict.values()[0]\n',
        'queries_dict.values()[0].strip()\n',
        'word\n',
        'word.token\n'],
        u'file:c:/Users/Administrator/Desktop/\u77e5\u8bc6\u56fe\u8c31/KG-demo-for-movie/kg_demo_movie/refo_test.py': ['a'\
        'ssert condition and action\n',
        'condition\n',
        'dir(condition)\n',
        'condition.arg()\n',
        'condition.arg\n',
        'condition.x\n',
        'type(condition)\n',
        'type(action)\n',
        'action\n',
        'sentence[0]\n',
        'len(sentence)\n',
        'sentence[10]\n',
        'sentence[10].pos\n',
        'sentence[10].token\n',
        'word\n',
        'word.token\n',
        'type(m1)\n',
        'word.pos\n',
        'm1\n',
        'm2\n',
        'm1 and m2\n',
        'm1.span\n',
        'm1.span()\n',
        'a = m1 and m2\n',
        'a\n',
        'a.start\n',
        'a.start()\n',
        'sentence\n',
        'clear\n',
        'help(finditer)\n',
        'm\n',
        'help(m.span)\n',
        'm.span\n',
        'm.span()._\n',
        'm.span()\n',
        "m.span('victim')\n",
        'sentence[i:j]\n',
        'sentence[i:j][0]\n',
        'sentence[i:j][0].token\n',
        'sentence[i:j][0].pos\n',
        'sentence[i:j][1].pos\n',
        'sentence[i:j][1].token\n',
        'i\n',
        'j\n']},
                                'launch-id': None,
                                'sel-line': 60L,
                                'sel-line-start': 1331L,
                                'selection_end': 1331L,
                                'selection_start': 1331L,
                                'zoom': 0L}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(1,),
        (1,
         2),
        (1,
         2,
         0)],
                                 'selected-nodes': [(1,
        2,
        2)],
                                 'top-node': (0,)},
                        'flat': {'expanded-nodes': [(0,)],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:D:/softwares/Anaconda3/Lib/site-packages/SPARQLWrapper/Wrapper.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/SPARQLWrapper/Wrapper.py'),
                      'ADD')]},
        loc('file:D:/softwares/Anaconda3/Lib/site-packages/gym/envs/classic_control/cartpole.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:D:/softwares/Anaconda3/Lib/site-packages/gym/envs/classic_control/cartpole.py'),
                             'CartPoleEnv')]],
        'top-node': [('class def',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/gym/envs/classic_control/cartpole.py'),
                      'CartPoleEnv')]},
        loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/instructions.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/instructions.py'),
                      'Accept')]},
        loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/match.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/match.py'),
                      'finditer')]},
        loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/patterns.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/patterns.py'),
                      'Any')]},
        loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/virtualmachine.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/virtualmachine.py'),
                      'RefoThread')]},
        loc('file:D:/softwares/Anaconda3/Lib/site-packages/requests/adapters.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/requests/adapters.py'),
                      'BaseAdapter')]},
        loc('file:D:/softwares/Anaconda3/Lib/site-packages/torch/autograd/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/torch/autograd/anomaly_mode.py'),
                      '')]},
        loc('file:D:/softwares/Anaconda3/Lib/site-packages/torch/nn/modules/module.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/softwares/Anaconda3/Lib/site-packages/torch/nn/modules/module.py'),
                      'Module')]},
        loc('file:D:/softwares/Anaconda3/Lib/urllib/request.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:D:/softwares/Anaconda3/Lib/urllib/request.py'),
                             '__version__')]],
        'top-node': [('class def',
                      loc('file:D:/softwares/Anaconda3/Lib/urllib/request.py'),
                      'AbstractBasicAuthHandler')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/bi-analysis/bi/ext/certificate.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/bi-analysis/bi/ext/certificate.py'),
                             'statistic_main')]],
        'top-node': [('generic attribute',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/bi-analysis/bi/ext/certificate.py'),
                      'args')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/bi-analysis/bi/statistic/statistic_dimension.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/bi-analysis/bi/statistic/statistic_dimension.py'),
                             'statistic_median_salary')]],
        'top-node': [('function def',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/bi-analysis/bi/statistic/statistic_dimension.py'),
                      'add_rank')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/jupyter/test/test.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/DCGAN.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/DCGAN.py'),
                      'build_dc_generator')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/DeepQLearning.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/DeepQLearning.py'),
                             'a')]],
        'top-node': [('generic attribute',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/DeepQLearning.py'),
                      'a')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/Gan.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/Gan.py'),
                             'batch_size')]],
        'top-node': [('generic attribute',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/Gan.py'),
                      'batch_size')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/Gan1.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/Gan1.py'),
                      'batch_size')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/LSGAN.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/LSGAN.py'),
                      'batch_size')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/Q-learning.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/Q-learning.py'),
                             'valid_actions')]],
        'top-node': [('generic attribute',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/Q-learning.py'),
                      'action')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/SimpleGAN.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/SimpleGAN.py'),
                      'batch_size')]},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/Variational_autoencoder.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/conv_Autoencoder.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/conv_Autoencoder.py'),
                             'autoencoder')]],
        'top-node': [('class def',
                      loc('../../\xe5\x96\x84\xe8\xaf\xbb\xe6\x95\xb0\xe6\x8d\xae/workspace1/pytorch/src/conv_Autoencoder.py'),
                      'autoencoder')]},
        loc('kg_demo_movie/KB_query/external_dict/movie_title.txt'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('kg_demo_movie/KB_query/external_dict/person_name.txt'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('kg_demo_movie/KB_query/jena_sparql_endpoint.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('kg_demo_movie/KB_query/jena_sparql_endpoint.py'),
                      'fuseki')]},
        loc('kg_demo_movie/KB_query/query_main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('kg_demo_movie/KB_query/query_main.py'),
                      'fuseki')]},
        loc('kg_demo_movie/KB_query/question2sparql.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('kg_demo_movie/KB_query/question2sparql.py'),
                      'Question2Sparql')]},
        loc('kg_demo_movie/KB_query/question_temp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('kg_demo_movie/KB_query/question_temp.py'),
                      'action')]},
        loc('kg_demo_movie/KB_query/word_tagging.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('kg_demo_movie/KB_query/word_tagging.py'),
                      'i')]},
        loc('kg_demo_movie/crawler/movie_crawler.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('kg_demo_movie/crawler/movie_crawler.py'),
                      'all_movie_genres')]},
        loc('kg_demo_movie/refo_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('kg_demo_movie/refo_test.py'),
                      'capitalize_name')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          4],
        'notebook_display': 'normal',
        'notebook_percent': 0.237017310252996,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'location'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'decode',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': u'items',
                                       'fReverse': False,
                                       'fSearchText': u'has_basic_person_info_question',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('kg_demo_movie/KB_query/question_temp.py'),
        {'attrib-starts': [('QuestionSet',
                            99),
                           ('QuestionSet.has_movie_question',
                            104)],
         'first-line': 88L,
         'folded-linenos': [],
         'sel-line': 111L,
         'sel-line-start': 3009L,
         'selection_end': 3009L,
         'selection_start': 3009L,
         'zoom': 0L},
        1542630300.681],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [],
          'first-line': 467L,
          'folded-linenos': [],
          'sel-line': 488L,
          'sel-line-start': 13423L,
          'selection_end': 13456L,
          'selection_start': 13446L,
          'zoom': 0L},
         1542630318.38],
        [loc('kg_demo_movie/KB_query/external_dict/movie_title.txt'),
         {'attrib-starts': [],
          'first-line': 2184L,
          'folded-linenos': [],
          'sel-line': 2194L,
          'sel-line-start': 39911L,
          'selection_end': 39923L,
          'selection_start': 39911L,
          'zoom': 0L},
         1542630321.401],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [],
          'first-line': 467L,
          'folded-linenos': [],
          'sel-line': 488L,
          'sel-line-start': 13423L,
          'selection_end': 13456L,
          'selection_start': 13446L,
          'zoom': 0L},
         1542630322.975],
        [loc('kg_demo_movie/KB_query/external_dict/person_name.txt'),
         {'attrib-starts': [],
          'first-line': 237L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1542630325.972],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [('W',
                             54)],
          'first-line': 41L,
          'folded-linenos': [],
          'sel-line': 54L,
          'sel-line-start': 1450L,
          'selection_end': 1469L,
          'selection_start': 1469L,
          'zoom': 0L},
         1542630557.923],
        [loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/patterns.py'),
         {'attrib-starts': [('Predicate',
                             47)],
          'first-line': 30L,
          'folded-linenos': [],
          'sel-line': 47L,
          'sel-line-start': 1191L,
          'selection_end': 1206L,
          'selection_start': 1197L,
          'zoom': 0L},
         1542630564.425],
        [loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/instructions.py'),
         {'attrib-starts': [('Atom',
                             17)],
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 17L,
          'sel-line-start': 543L,
          'selection_end': 553L,
          'selection_start': 549L,
          'zoom': 0L},
         1542630573.668],
        [loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/instructions.py'),
         {'attrib-starts': [('Instruction',
                             8)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 256L,
          'selection_end': 273L,
          'selection_start': 262L,
          'zoom': 0L},
         1542630588.454],
        [loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/patterns.py'),
         {'attrib-starts': [('Predicate',
                             47)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 47L,
          'sel-line-start': 1191L,
          'selection_end': 1206L,
          'selection_start': 1197L,
          'zoom': 0L},
         1542630604.769],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [],
          'first-line': 578L,
          'folded-linenos': [],
          'sel-line': 603L,
          'sel-line-start': 23185L,
          'selection_end': 23333L,
          'selection_start': 23314L,
          'zoom': 0L},
         1542630810.924],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [],
          'first-line': 536L,
          'folded-linenos': [],
          'sel-line': 553L,
          'sel-line-start': 15844L,
          'selection_end': 15996L,
          'selection_start': 15978L,
          'zoom': 0L},
         1542631163.557],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [],
          'first-line': 539L,
          'folded-linenos': [],
          'sel-line': 563L,
          'sel-line-start': 17858L,
          'selection_end': 17859L,
          'selection_start': 17858L,
          'zoom': 0L},
         1542632086.869],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [],
          'first-line': 579L,
          'folded-linenos': [],
          'sel-line': 600L,
          'sel-line-start': 22830L,
          'selection_end': 22855L,
          'selection_start': 22830L,
          'zoom': 0L},
         1542632452.899],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [('QuestionSet',
                             99),
                            ('QuestionSet.has_basic_movie_info_question',
                             339)],
          'first-line': 333L,
          'folded-linenos': [],
          'sel-line': 339L,
          'sel-line-start': 10197L,
          'selection_end': 10234L,
          'selection_start': 10205L,
          'zoom': 0L},
         1542632463.186],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [],
          'first-line': 543L,
          'folded-linenos': [],
          'sel-line': 562L,
          'sel-line-start': 17687L,
          'selection_end': 17777L,
          'selection_start': 17766L,
          'zoom': 0L},
         1542632477.34],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [],
          'first-line': 577L,
          'folded-linenos': [],
          'sel-line': 593L,
          'sel-line-start': 22025L,
          'selection_end': 22051L,
          'selection_start': 22025L,
          'zoom': 0L},
         1542632503.476],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [('QuestionSet',
                             99),
                            ('QuestionSet.has_basic_person_info_question',
                             312)],
          'first-line': 306L,
          'folded-linenos': [],
          'sel-line': 312L,
          'sel-line-start': 9421L,
          'selection_end': 9459L,
          'selection_start': 9429L,
          'zoom': 0L},
         1542632510.535],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [],
          'first-line': 533L,
          'folded-linenos': [],
          'sel-line': 561L,
          'sel-line-start': 17404L,
          'selection_end': 17548L,
          'selection_start': 17546L,
          'zoom': 0L},
         1542632630.496],
        [loc('kg_demo_movie/KB_query/question_temp.py'),
         {'attrib-starts': [('QuestionSet',
                             99),
                            ('QuestionSet.has_basic_person_info_question',
                             312)],
          'first-line': 306L,
          'folded-linenos': [],
          'sel-line': 320L,
          'sel-line-start': 9619L,
          'selection_end': 9662L,
          'selection_start': 9636L,
          'zoom': 0L},
         1542632638.821]],
        20),
        'current-loc': loc('kg_demo_movie/KB_query/question_temp.py'),
        'editor-state-list': [(loc('kg_demo_movie/KB_query/question_temp.py'),
                               {'attrib-starts': [],
                                'first-line': 543L,
                                'folded-linenos': [],
                                'sel-line': 595L,
                                'sel-line-start': 22318L,
                                'selection_end': 22413L,
                                'selection_start': 22408L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('kg_demo_movie/KB_query/question_temp.py')]),
                               'open_files': [u'kg_demo_movie/KB_query/question_temp.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5721107927411653},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 1.0},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (123,
                         78,
                         1085,
                         681)}]}
guimgr.recent-documents = [loc('kg_demo_movie/KB_query/question_temp.py')]
guimgr.visual-state = {loc('../../../../../Anaconda2/Lib/site-packages/SPARQLWrapper/Wrapper.py'): {'a'\
        'ttrib-starts': [('SPARQLWrapper',
                          225),
                         ('SPARQLWrapper._query',
                          749)],
        'first-line': 754L,
        'folded-linenos': [],
        'sel-line': 769L,
        'sel-line-start': 38752L,
        'selection_end': 38752L,
        'selection_start': 38752L,
        'zoom': 0L},
                       loc('../../../../../Anaconda2/Lib/site-packages/pymysql/connections.py'): {'a'\
        'ttrib-starts': [('Connection',
                          115),
                         ('Connection._request_authentication',
                          780)],
        'first-line': 834L,
        'folded-linenos': [],
        'sel-line': 846L,
        'sel-line-start': 31345L,
        'selection_end': 31345L,
        'selection_start': 31345L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/Lib/site-packages/pymysql/err.py'): {'a'\
        'ttrib-starts': [('raise_mysql_exception',
                          99)],
        'first-line': 82L,
        'folded-linenos': [],
        'sel-line': 108L,
        'sel-line-start': 3680L,
        'selection_end': 3680L,
        'selection_start': 3680L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/instructions.py'): {'a'\
        'ttrib-starts': [('Instruction',
                          8)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 256L,
        'selection_end': 273L,
        'selection_start': 262L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/match.py'): {'a'\
        'ttrib-starts': [('Match',
                          11),
                         ('Match.__getitem__',
                          32)],
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1012L,
        'selection_end': 1012L,
        'selection_start': 1012L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/Lib/site-packages/refo/patterns.py'): {'a'\
        'ttrib-starts': [('Predicate',
                          47)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 1191L,
        'selection_end': 1206L,
        'selection_start': 1197L,
        'zoom': 0L},
                       loc('file:D:/softwares/Anaconda3/Lib/site-packages/requests/adapters.py'): {'a'\
        'ttrib-starts': [('HTTPAdapter',
                          80),
                         ('HTTPAdapter.send',
                          387)],
        'first-line': 500L,
        'folded-linenos': [],
        'sel-line': 505L,
        'sel-line-start': 20166L,
        'selection_end': 20166L,
        'selection_start': 20166L,
        'zoom': 0L},
                       loc('file:D:/softwares/Wing IDE 6.1/resources/builtin-pi-files/2.7/__builtin__.pi'): {'a'\
        'ttrib-starts': [('raw_input',
                          1728)],
        'first-line': 1712L,
        'folded-linenos': [],
        'sel-line': 1728L,
        'sel-line-start': 54553L,
        'selection_end': 54566L,
        'selection_start': 54557L,
        'zoom': 0L},
                       loc('fuseki_conf.ttl'): {'attrib-starts': [],
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 722L,
        'selection_end': 766L,
        'selection_start': 766L,
        'zoom': 0L},
                       loc('kg_demo_movie.nt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/external_dict/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/external_dict/csv2txt.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 234L,
        'selection_end': 282L,
        'selection_start': 282L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/external_dict/movie_title.csv'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/external_dict/movie_title.txt'): {'a'\
        'ttrib-starts': [],
        'first-line': 2184L,
        'folded-linenos': [],
        'sel-line': 2194L,
        'sel-line-start': 39911L,
        'selection_end': 39923L,
        'selection_start': 39911L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/external_dict/person_name.csv'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/external_dict/person_name.txt'): {'a'\
        'ttrib-starts': [],
        'first-line': 237L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/jena_sparql_endpoint.py'): {'a'\
        'ttrib-starts': [('JenaFuseki',
                          20),
                         ('JenaFuseki.print_result_to_string',
                          48)],
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 70L,
        'sel-line-start': 1948L,
        'selection_end': 1948L,
        'selection_start': 1948L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/query_main.py'): {'attrib'\
        '-starts': [],
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 611L,
        'selection_end': 654L,
        'selection_start': 654L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/question2sparql.py'): {'a'\
        'ttrib-starts': [('Question2Sparql',
                          20),
                         ('Question2Sparql.get_sparql',
                          25)],
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 37L,
        'sel-line-start': 773L,
        'selection_end': 806L,
        'selection_start': 806L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/question_temp.py'): {'att'\
        'rib-starts': [],
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 731L,
        'selection_end': 791L,
        'selection_start': 780L,
        'zoom': 0L},
                       loc('kg_demo_movie/KB_query/word_tagging.py'): {'attr'\
        'ib-starts': [('Tagger',
                       25),
                      ('Tagger.get_word_objects',
                       40)],
        'first-line': 29L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 1078L,
        'selection_end': 1117L,
        'selection_start': 1117L,
        'zoom': 0L},
                       loc('kg_demo_movie/crawler/movie_crawler.py'): {'attr'\
        'ib-starts': [],
        'first-line': 259L,
        'folded-linenos': [],
        'sel-line': 269L,
        'sel-line-start': 9712L,
        'selection_end': 9733L,
        'selection_start': 9733L,
        'zoom': 0L},
                       loc('kg_demo_movie/crawler/tradition2simple/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 23L,
        'selection_start': 23L,
        'zoom': 0L},
                       loc('kg_demo_movie/crawler/tradition2simple/langconv.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 202L,
        'selection_end': 221L,
        'selection_start': 221L,
        'zoom': 0L},
                       loc('kg_demo_movie/crawler/tradition2simple/traditional2simple.py'): {'a'\
        'ttrib-starts': [('tradition2simple',
                          19)],
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 258L,
        'selection_end': 303L,
        'selection_start': 303L,
        'zoom': 0L},
                       loc('kg_demo_movie/crawler/tradition2simple/zh_wiki.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 317L,
        'selection_end': 330L,
        'selection_start': 330L,
        'zoom': 0L},
                       loc('kg_demo_movie/refo_test.py'): {'attrib-starts': [],
        'first-line': 66L,
        'folded-linenos': [],
        'sel-line': 81L,
        'sel-line-start': 2275L,
        'selection_end': 2275L,
        'selection_start': 2275L,
        'zoom': 0L},
                       loc('requirements.txt'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 13L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.default-encoding = 'utf_8'
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'D:\\softwares\\Anaconda3\\python.exe')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'has_basic_person_info_question',
                         u'person_basic_keyword_rules',
                         u'has_basic_movie_info_question',
                         u'movie_basic_keyword_rules',
                         u'genre_keyword_rules',
                         u'decode',
                         u'W',
                         u'has_specific_type_movie_question',
                         u'\u8272\u6212']
testing.stored-results = (1,
                          [],
                          {})
